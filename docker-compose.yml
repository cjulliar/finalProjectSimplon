version: '3.8'

services:
  # Service principal Python
  app:
    build: 
      context: .
      dockerfile: docker/app/Dockerfile
    volumes:
      - ./src:/app/src
      - ./docs:/app/docs
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=bankreports
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db

  # Base de données SQLite (pour le développement)
  db:
    image: alpine:latest
    volumes:
      - ./data:/data
    command: sh -c "mkdir -p /data && echo 'SQLite database directory' > /data/README.txt"

  # API FastAPI
  api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
    environment:
      - DATABASE_URL=sqlite:///data/bankdata.db
      - API_SECRET_KEY=${API_SECRET_KEY:-secret-key-change-in-production}
      - API_ALGORITHM=HS256
      - API_ACCESS_TOKEN_EXPIRE_MINUTES=30
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@example.com}
    command: >
      bash -c "
        python -m src.scripts.setup_admin --username $$ADMIN_USERNAME --password $$ADMIN_PASSWORD --email $$ADMIN_EMAIL &&
        python -m src.scripts.run_api --host 0.0.0.0
      "

  # Monitoring Prometheus
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./docker/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"

  # Dashboard Grafana
  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

volumes:
  prometheus_data:
  grafana_data: 