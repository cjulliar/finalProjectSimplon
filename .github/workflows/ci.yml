name: CI/CD

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:
    inputs:
      deploy_to_production:
        description: 'Déployer en production'
        required: true
        default: 'false'
        type: boolean

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8
        pip install -e .
    
    - name: Create test directories and files
      run: |
        mkdir -p docs
        touch docs/.gitkeep
    
    - name: Run tests
      run: |
        python -m pytest tests/ -v --cov=src/ --cov-report=term-missing
    
    - name: Lint with flake8
      run: |
        # Utiliser une configuration plus souple pour flake8
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'
    steps:
    - uses: actions/checkout@v3
    
    # Configuration de Docker
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    # Une autre méthode pour installer Docker Compose
    - name: Set up Docker Compose
      uses: ndeloof/install-compose-action@v0.0.1
      with:
        version: v2.23.3
    
    - name: Build Docker images
      run: |
        docker compose version
        docker compose build

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to staging
      run: echo "Deploying to staging environment (simulation)"

  deploy-production:
    needs: build
    runs-on: ubuntu-latest
    if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') || github.event.inputs.deploy_to_production == 'true'
    environment:
      name: production
      url: https://your-production-url.com
    concurrency: 
      group: production
      cancel-in-progress: false
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to production
      run: echo "Deploying to production environment (simulation)"